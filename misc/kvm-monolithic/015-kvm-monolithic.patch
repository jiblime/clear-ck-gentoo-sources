https://lkml.org/lkml/2019/9/20/947

KVM: retpolines: x86: eliminate retpoline from svm.c exit handlers
https://git.kernel.org/pub/scm/linux/kernel/git/andrea/aa.git/commit/?h=kvm-mono1&id=c41ea5de5dfa3bc6e51fafef679a86486bf2fb22

It's enough to check the exit value and issue a direct call to avoid
the retpoline for all the common vmexit reasons.

---

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index ca9fd1762519..7324243b0a82 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -4991,6 +4991,20 @@ static int handle_exit(struct kvm_vcpu *vcpu)
 		return 0;
 	}
 
+#ifdef CONFIG_RETPOLINE
+	if (exit_code == SVM_EXIT_MSR)
+		return msr_interception(svm);
+	else if (exit_code == SVM_EXIT_VINTR)
+		return interrupt_window_interception(svm);
+	else if (exit_code == SVM_EXIT_INTR)
+		return intr_interception(svm);
+	else if (exit_code == SVM_EXIT_HLT)
+		return halt_interception(svm);
+	else if (exit_code == SVM_EXIT_NPF)
+		return npf_interception(svm);
+	else if (exit_code == SVM_EXIT_CPUID)
+		return cpuid_interception(svm);
+#endif
 	return svm_exit_handlers[exit_code](svm);
 }
 


