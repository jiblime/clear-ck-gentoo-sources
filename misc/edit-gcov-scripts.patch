Parallelize make by number of CPUs available.
Removed kgcc as cc.
Added -fgraphite-identity and -floop-nest-optimize to the PGO'd build script.

---

--- a/scripts/kgcov/buildGCOVKernel
+++ b/scripts/kgcov/buildGCOVKernel
@@ -1,7 +1,6 @@
 #!/bin/bash
 # This script builds an GCOV instumented kernel.
 echo 'Setup instrumented kernel build env'
-KGCCVER=/opt/kgcc-8/bin/
 # We need to mount the kernel source in /tmp root to make the profile data system agnostic
 # without it the generated profile data is useless.
 DIR=$PWD
@@ -27,7 +26,7 @@ echo 'Building Instrumented Kernel.'
 # It is not possible to build instrumented/pgo kernel with distro gcc configuration:
 #   gcc produces invalid code producing 'TLS' references to the gcov variables but kernel-code does not have TLS.
 # Also we are thinking the kernel as one monolith 'program' we are instrumenting.
-make $@  V=2 CC=$KGCCVER/kgcc AR=$KGCCVER/kgcc-ar NM=$KGCCVER/kgcc-nm
+make $@  V=2 CC=gcc AR=gcc-ar NM=gcc-nm -j$(cat /proc/cpuinfo | grep processor | wc -l)
 if [ $? -eq 0 ]; then
     echo 'Kernel build okay!'
     ./scripts/kgcov/gathergcno.sh gcnoprofile.tar.gz

--- a/scripts/kgcov/genPGOKernel
+++ b/scripts/kgcov/genPGOKernel
@@ -3,7 +3,6 @@
 # and mangle it for consumption by PGO build
 # the kernel is built after this.
 
-KGCCVER=/opt/kgcc-8/bin
 echo 'Initializing kernel PGO optimization..'
 DIR=$PWD
 mkdir -p /tmp/kernelsrc
@@ -58,7 +57,7 @@ if [ ! -f $CHECKPROF/mm/.tmp_mmap.gcda ]
     # To improve the profile data consistency multiple data sets should
     # be merged and then scaled.
     echo 'Postprocesing profile data with kgcov-tool..'
-    $KGCCVER/kgcov-tool rewrite -s 1.0 -o /tmp/kernelPGOdump/ /tmp/kernelPGOdump/
+    gcov-tool rewrite -s 1.0 -o /tmp/kernelPGOdump/ /tmp/kernelPGOdump/
 
     echo 'Adjusting profile data file names..'
     find /tmp/kernelPGOdump/* -name '*.gcda' -print0 | xargs -0 -n1 -P0 ./scripts/kgcov/rename.sh
@@ -102,7 +101,7 @@ echo 'See optimize.log for applied optim
 echo 'See build.log for normal KBuild log so far.'
 taskset -pc 0-7 $$ >/dev/null
 {
-make $@ V=2 CC=$KGCCVER/kgcc AR=$KGCCVER/kgcc-ar NM=$KGCCVER/kgcc-nm KCFLAGS="-fopt-info-optall=optimize.log";
+make $@ V=2 CC=gcc AR=gcc-ar NM=gcc-nm -j$(cat /proc/cpuinfo | grep processor | wc -l) KCFLAGS="-fgraphite-identity -floop-nest-optimize -fopt-info-optall=optimize.log";
 if [ $? -eq 0 ]; then
     echo 'Profile Optimized Kernel build okay!'
     exit 0

--- a/scripts/kgcov/mergegcov.sh
+++ b/scripts/kgcov/mergegcov.sh
@@ -3,11 +3,10 @@
 # Batch Merge multiple GCOV profile data sets
 # all profileXX.tar.gz are extracted to /tmp/kernelPGOdumpXX dirs.
 # Counters are then accumulated into /tmp/kernelPGOdump dir
-KGCCVER=/opt/kgcc-8/bin
 
 if [[ ! -f ./scripts/kgcov/calcsum  ]]; then
     echo "Compiling calcsum-4.9 for post processing the profile data.."
-    gcc -O2 /scripts/kgcov/calcsum-4.9.cpp -o ./scripts/kgcov/calcsum -lstdc++
+    gcc -O2 ./scripts/kgcov/calcsum-4.9.cpp -o ./scripts/kgcov/calcsum -lstdc++
 fi
 
 NUM=1
@@ -24,7 +23,7 @@ for gcdapkg in $@; do
     rm -f list.txt
     
     echo "Postprocesing GCOV data set ${NUM} with kgcov-tool.."
-    $KGCCVER/kgcov-tool rewrite -s 1.0 -o /tmp/kernelPGOdump${NUM} /tmp/kernelPGOdump${NUM}
+    gcov-tool rewrite -s 1.0 -o /tmp/kernelPGOdump${NUM} /tmp/kernelPGOdump${NUM}
     (( NUM += 1 ))
 done
 
@@ -35,7 +34,7 @@ MC=2
 while [[ $MC -lt $NUM ]]; do
     # Merge rest into first data set.
     echo "Merging GCOV data set ${MC}.."
-    $KGCCVER/kgcov-tool merge -w 1.0,1.0 -o /tmp/kernelPGOdump /tmp/kernelPGOdump /tmp/kernelPGOdump${MC}
+    gcov-tool merge -w 1.0,1.0 -o /tmp/kernelPGOdump /tmp/kernelPGOdump /tmp/kernelPGOdump${MC}
     (( MC += 1 ))
 done
 

--- a/scripts/kgcov/calcsum-4.9.cpp
+++ b/scripts/kgcov/calcsum-4.9.cpp
@@ -170,7 +170,9 @@ int write_file(const vector<char> in, co
 	// or picked from the gcc error message.
 	// I have not yet figured out where kgcov registers the
 	// GCC version or how to change it automatically per build.
-	unsigned int gcov_version = 1094201898;
+	/* The version for gcov 9.2.0 seems to be 1094267434.
+	                  (the previous value was 1094201898) */
+	unsigned int gcov_version = 1094267434;
 	fwrite(in.data(), 1, 4, fp);
 	fwrite(&gcov_version, 1, 4, fp);
 	fwrite(in.data()+8, 1, 4, fp);
